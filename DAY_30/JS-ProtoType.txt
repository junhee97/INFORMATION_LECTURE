ProtoType


  상속
	상위 객체의 속성과 기능을 하위 객체가 물려받을 수 있도록한 구조
	(코드를 간결하게 하기위해)


  Object.prototype
	객체가 상속을 구현하는데 사용되는 매커니즘, Object객체 내에 구성

	Object.prototype
	자바스크립트의 모든 객체가 상속하는 프로토타입 체인의 최상위에 있는 객체입니다.
	따라서 Object.prototype에는 다양한 함수들이 정의되어 있습니다.
	일부 중요한 함수들은 다음과 같습니다
	:
	  toString() : 객체를 문자열로 변환하여 반환합니다.
	  hasOwnProperty() : 객체가 특정 속성을 직접 소유하고 있는지 여부를 확인합니다.
	  isPrototypeOf() : 객체가 다른 객체의 프로토타입 체인에 존재하는지 여부를 확인합니다.
	  valueOf() : 객체의 원시 값 표현을 반환합니다.
	  toLocalString() : 객체를 지역화된 문자열로 변환하여 반환합니다.
	  propertyIsEnumerable() : 특정 속성이 열거 가능한 속성인지 여부를 확인합니다.
	  constructor : 객체를 생성한 생성자 함수를 참조합니다.


  함수
	데이터를 받아 특정 처리를 하는 논리적 공간


  연산자
	산술연산자
		+ (덧셈)
		- (뺄셈)
		* (곱셈)
		/ (나눗셈)
		% (나머지) - 짝홀수 구분, 배수구분, 끝자리수 확인, 수범위 제한
		++ (증가)
		-- (감소)

	할당 연산자
		= (할당)
		+= (더해서 할당)
		-= (빼서 할당)
		*= (곱해서 할당)
		/= (나눠서 할당)
		%= (나머지를 할당)

	비교 연산자(이항 연산자) - 조건식 생성 가능
		== (동등 비교)
		=== (일치 비교)
		!= (부등 비교)
		!== (불일치 비교)
		> (크다)
		< (작다)
		>= (크거나 같다)
		<= (작거나 같다)

	논리 연산자
		&& (논리 AND)
		  왼쪽 조건식의 결과가 true일때 오른쪽 조건식을 실행
		|| (논리 OR)
		  왼쪽 조건식의 결과가 false일때 오른쪽 조건식을 실행
		! (논리 NOT)

	비트 연산자
		& (비트 AND)
		| (비트 OR)
		^ (비트 XOR)
		~ (비트 NOT)
		<< (왼쪽 시프트)
		>> (오른쪽 시프트)
		>>> (부호 없는 오른쪽 시프트)

	삼항 조건 연산자
		조건식 ? true인 경우 실행 : false인 경우 실행


	if ( 조건식 ) { 종속문장 }


	반복문
	  조건식이 참인 동안에 반복 실행되도록 허용된 문법

	while ( 조건식 ) { 참인 동안 실행되는 종속문장 }

	for ( 초기값; 조건식; 연산식 ) { 참인 동안 실행되는 종속문장 }

