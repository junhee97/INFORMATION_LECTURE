객체 - Object
	존재 ( 독점적이고 베타적인 공간을 차지 ) 하는 사물 ( Object )
	속성 ( Attribute ) : 객체마다 구별되는 데이터 ( 저장 - 변수처리 )
	기능 ( Function ) : 객체마다 수행할 수 있는 공통 Action ( 기능 - 메소드 처리 )


객체 지향
	현실 세계의 여러 객체의 정보 ( 속성 / 기능 ) 중에 필요한 일부만 추출 ( 추상화 ) 하여
	문제 해결을 하기 위한 요소단위로 적재 ( 저장 ) 하기 위해 고안된 문법


클래스
	동일한 종류의 객체에 필욯나 메모리 공간을 제공하기 위해 선언된 자료형
	클래스로 객체를 생성하기 전에는 기본적으로 메모리 공간을 차지하지 않는다
	클래스 자료형에 의해 객체가 정의되는 순간 클래스에서 선언한 속성과 기능대로
	공간형성이 이루어 진다


자바의 메모리 영역
	스택 영역 : { } 내에서 생성되고 소멸되는 영역 ( int, double, ... )
	클래스 ( == 메소드 ) 영역 : 공유 메모리 영역
				( 생성자, 일반 메소드, static 메소드, static 변수, ... )
	힙 영역 : 객체 저장 영역 ( new 예약어 사용시 할당 )


코드 해석
	Scanner sc = new Scanner ( System.in ) ;
Stack			Heap			Class ( Method )

main			Scanner 객체		Scanner ( System.in )
{			   100번지	<-	{
Scanner sc					....
   100번지	<-				return Scanner 객체
}						}

	new : 힙 ( Heap ) 영역에 객체 저장
	Scanner ( ) : 객체에 필요한 초기값을 부여하기 위한 생성자 메소드
	Scanner sc : Scanner 라는 클래스 자료형으로 정의된 참조변수 sc

	힙 메모리 영역에 Scanner 에 필요한 초기값이 담긴 객체를 생성하고
	현 위치 ( main stack ) 에 Scanner 자료형으로 만든 sc 참조변수에 상성된 Scanner 객체의
	" 시작 메모리 주소 " 를 저장

문법
	현실의 모든것을 프로그램으로 가져오기 위해 만듦
	사람이 할일을 컴퓨터로 대신 처리하기 위해


Package 내에서 클래스 명이 겹치면 안됨.


멤버변수
	클래스 내부에서 - 메소드 영역 바깥에서 새엇ㅇ
	생성된 객체의 개별 정보 저장

static 변수
	동일 클래스로부터 만든 여러 객체간 공유하는 멤버변수

지역변수
	메소드 영역 내에서 ( or 메소드 영역 내의 { } 범위에서 포함 )
	생성되는 변수 ( 파라미터, 매개변수 ) 


메소드 오버로딩 ( Overloading )
	메소드의 이름은 동일하지만 파라미터가 다른 여러 메소드를 만드는 것


생성자 메소드
	객체 생성시 한번만 호출되는 메소드
	생성된 객체 내에서는 사용이 불가능
	객체 생성시에 필요한 메모리공간 형성과 "초기값 부여 " 에 사용
	생성자 메소드 이름은 클래스 이름과 동일하며 반환 자료형은 가지지 않는다

	생성자 함수를 클래스 내에 명시하지 않으면 ( 코드삽입 x ) 컴파일러에 의해 주입되는
	생성자가 있는데 이를 디폴트 생성자라고 한다