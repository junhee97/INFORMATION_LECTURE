FRAMEWORK
	작업에 필요한 여러가지 것들을 따로 직접 구할 필요없이 FRAME 내에서 가져와
	쓸 수 있도록 제공하는 틀


SPRINGFRAMEWORK
	Java 플랫폼을 위한 오픈 소스 애플리케이션 프레임워크

핵심기능

의존성 주입 (Dependency Injection, DI)
	Spring은 객체 간의 의존성을 주입하는 기능을 제공합니다.
	DI를 통해 객체 간의 결합도를 낮추고 코드의 유연성을 향상시킵니다.
제어의 역전 (Inversion of Control, IoC)
	Spring은 제어의 역전 원칙을 따르며,
	객체의 생명주기와 의존성 관리를 프레임워크가 담당합니다.
	이를 통해 개발자는 객체의 생성과 관리에 대한 부담을 줄일 수 있습니다.
AOP (Aspect-Oriented Programming)
	Spring은 관점 지향 프로그래밍을 지원하여 횡단 관심사를 모듈화할 수 있습니다.
	이를 통해 핵심 비즈니스 로직과 각광 받는 부가 기능을 분리할 수 있습니다.
트랜잭션 관리
	Spring은 선언적 트랜잭션 관리를 지원하여
	개발자가 트랜잭션 처리에 대한 복잡한 코드를 작성하지 않아도 됩니다.
	데이터베이스 연산의 일관성과 안정성을 보장합니다.
스프링 MVC (Spring Model-View-Controller)
	Spring은 웹 애플리케이션을 개발하기 위한 MVC 아키텍처를 제공합니다.
	Spring MVC를 사용하면 요청을 처리하는 컨트롤러,
	데이터를 표시하는 뷰, 비즈니스 로직을 처리하는 모델을 분리하여 개발할 수 있습니다.
스프링 데이터 (Spring Data)
	Spring은 데이터 액세스를 위한 다양한 기능을 제공합니다
★ 스프링 시큐리티 (Spring Security)
	Spring은 보안을 위한 스프링 시큐리티 프레임워크를 제공합니다.
	스프링 시큐리티를 사용하면 인증, 권한 부여, 보안 설정 등을 쉽게 구현할 수 있습니다.
스프링 배치 (Spring Batch)
	Spring은 대용량 데이터 처리를 위한 스프링 배치 프레임워크를 제공합니다.
	스프링 배치는 일괄 처리 작업을 생성하고 구성할 수 있으며,
	작업을 스케줄링하고 청크 기반 처리를 통해 대용량 데이터를
	효율적으로 처리할 수 있습니다.


STS3
	스프링 개발환경 이클립스 플러그인
	xml 기반, 스프링부트 미지원, maven build 기본


BUILD
	소스 코드를 컴파일하고 패키징하여 실행 가능한 애플리케이션 또는 라이브러리를 
	생성하는 도구
	소프트웨어 개발 과정 중 하나로, 소스 코드 및 리소스를 컴퓨터가 이해할 수 있는
	실행 가능한 프로그램 또는 라이브러리로 변환하는 과정

JAVA 빌드 도구
	ANT
	MAVEN
	GRADLE